[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.hatch.version]
path = 'pydantic_extra_types/__init__.py'

[project]
name = 'pydantic-extra-types'
description = 'Extra Pydantic types.'
authors = [
    {name = 'Samuel Colvin', email = 's@muelcolvin.com'},
    {name = 'Yasser Tahiri', email = 'hello@yezz.me'},
]
license = 'MIT'
readme = 'README.md'
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Environment :: Console',
    'Environment :: MacOS X',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Internet',
]
requires-python = '>=3.7'
dependencies = [
    'pydantic',
    'pydantic_core',
]
dynamic = ['version']

[project.urls]
Homepage = 'https://github.com/pydantic/pydantic-extra-types'
Source = 'https://github.com/pydantic/pydantic-extra-types'
Changelog = 'https://github.com/pydantic/pydantic-extra-types/releases'
# TODO: Documentation

[project.optional-dependencies]
lint = [
    "pre-commit==3.0.4",
    "mypy==0.991",
]
test = [
    "pytest==7.2.1",
    "pytest-asyncio == 0.20.3",
    "codecov==2.1.12",
    "pytest-cov==4.0.0",
    "pytest-pretty==1.1.0"
]


[tool.isort]
profile = "black"
known_third_party = ["pydantic",  "typing_extensions"]

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["pydantic", "typing_extensions"]

[tool.mypy]
plugins = "pydantic.mypy"
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise NotImplemented",
    "@overload",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]

[tool.pytest]
testpaths = "tests/"
log_cli = "1"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
